// File generated by FlutterFire CLI.
// ignore_for_file: type=lint
import 'package:firebase_core/firebase_core.dart' show FirebaseOptions;
import 'package:flutter/foundation.dart'
    show defaultTargetPlatform, kIsWeb, TargetPlatform;

/// Default [FirebaseOptions] for use with your Firebase apps.
///
/// Example:
/// ```dart
/// import 'firebase_options.dart';
/// // ...
/// await Firebase.initializeApp(
///   options: DefaultFirebaseOptions.currentPlatform,
/// );
/// ```
class DefaultFirebaseOptions {
  static FirebaseOptions get currentPlatform { //Método estático que devuelve las configuraciones de Firebase dependiendo de la plataforma en la que se ejecuta la app
    if (kIsWeb) { // Si la app está en ejecución en la web, retorna las configuraciones para la plataforma web.
      return web;
    }
    switch (defaultTargetPlatform) { // Detecta la plataforma actual y retorna las configuraciones correspondientes:
      case TargetPlatform.android: //: Configuración para Android.
        return android;
      case TargetPlatform.iOS: //otras plataformas Lanza una excepción porque no están configuradas.
        throw UnsupportedError(
          'DefaultFirebaseOptions have not been configured for ios - '
          'you can reconfigure this by running the FlutterFire CLI again.',
        );
      case TargetPlatform.macOS:
        throw UnsupportedError(
          'DefaultFirebaseOptions have not been configured for macos - '
          'you can reconfigure this by running the FlutterFire CLI again.',
        );
      case TargetPlatform.windows:
        throw UnsupportedError(
          'DefaultFirebaseOptions have not been configured for windows - '
          'you can reconfigure this by running the FlutterFire CLI again.',
        );
      case TargetPlatform.linux:
        throw UnsupportedError(
          'DefaultFirebaseOptions have not been configured for linux - '
          'you can reconfigure this by running the FlutterFire CLI again.',
        );
      default:
        throw UnsupportedError(
          'DefaultFirebaseOptions are not supported for this platform.',
        );
    }
  }

  static const FirebaseOptions web = FirebaseOptions(
    apiKey: 'AIzaSyCOXoFqcSvw2WVQ98YSf1wrE8HuSiBrXSY', //Clave de la API utilizada para la autenticación y otros servicios.
    appId: '1:696637667287:web:150d7936f0da1d20877d92', // ID único de la aplicación Firebase para la plataforma web.
    messagingSenderId: '696637667287', //ID utilizado para enviar notificaciones push a través de Firebase Cloud Messaging.
    projectId: 'donut-app1', //ID del proyecto Firebase.
    authDomain: 'donut-app1.firebaseapp.com', // Dominio de autenticación para la web.
    storageBucket: 'donut-app1.firebasestorage.app', //URL del bucket de almacenamiento en Firebase Storage.
  );

  static const FirebaseOptions android = FirebaseOptions( //configuraciones similares pero para android
    apiKey: 'AIzaSyBCjHKqRPoO9WDSG6Ct8rpi82lAkserD5A',
    appId: '1:696637667287:android:fcb9ba6046774018877d92',
    messagingSenderId: '696637667287',
    projectId: 'donut-app1',
    storageBucket: 'donut-app1.firebasestorage.app',
  );

}